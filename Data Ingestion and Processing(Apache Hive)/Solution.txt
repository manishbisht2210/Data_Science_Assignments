--The New York City Taxi & Limousine Commission (TLC) Data Analysis.
--Setting up the environment.  
--Add the jar.

ADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;

--Set the following parameters for partitions on Notebook.
SET hive.exec.dynamic.partition = true;
SET hive.exec.max.dynamic.partitions = 100000;
SET hive.exec.max.dynamic.partitions.pernode = 100000;

SET hive.execution.engine=mr;


--Data Quality Checks.
-----------------------------
-----------------------------
--Create the external table nyctaxidata_table for analysis.

--Droping table if exists.
drop table nyctaxidata_table;
--Creating tabel.
CREATE EXTERNAL TABLE IF NOT EXISTS nyctaxidata_table(vendorid int, tpep_pickup_datetime string, tpep_dropoff_datetime string, passenger_count int, trip_distance double,rate_code_id int, store_and_fwd_flag string, pu_location_id int, do_location_id int, payment_type int, fare_amount double, extra double, mta_tax double, tip_amount double, tolls_amount double, improvement_surcharge double, total_amount double)
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
STORED AS TEXTFILE
LOCATION '/common_folder/nyc_taxi_data/'
tblproperties ("skip.header.line.count"="1");

--Check the table
select * from nyctaxidata_table limit 5;

-----------------------------
-----------------------------
--Question 1-->
-----------------------------
-----------------------------

-- How many records has each TPEP provider provided? Write a query that summarises the number of records of each provider.
-- Write query to count number of rows group by provider(vendorid)
select vendorid as Provider, count(*) as Number_Of_Records from nyctaxidata_table group by vendorid;

--Results
--provider|number_of_records
--    2   |		647183
--	  1	  |		527386
--Creative Moblie Technologies,LLC (= 1) provided 527,386(45%) records where as VeriFone Inc. (= 2) provided 647,183(55%) records.

-----------------------------
-----------------------------
--Question 2
-----------------------------
-----------------------------

--The data provided is for months November and December only. Check whether the data is consistent, and if not, identify the data quality issues. Mention all data quality issues in comments.
-----------------------------
--Check pickup datetime and dropoff datetime column
-----------------------------
--Write a query to check different year and months in pickup datetime of trip.
select year(from_unixtime(unix_timestamp(tpep_pickup_datetime)))as Pick_Up_Year, month(from_unixtime(unix_timestamp(tpep_pickup_datetime)))as Pick_Up_Month, count(*)as Number_Of_Records from nyctaxidata_table group by year(from_unixtime(unix_timestamp(tpep_pickup_datetime))), month(from_unixtime(unix_timestamp(tpep_pickup_datetime))) order by Pick_Up_Year, Pick_Up_Month;
--There are 14 records in which pickup datetime is other than November and December of 2017. Which implies data is not consistent, so we will check other columns as well.

--Write a query to check different year and months in dropoff datetime of trip.
select year(from_unixtime(unix_timestamp(tpep_dropoff_datetime))) as Drop_Off_Year, month(from_unixtime(unix_timestamp(tpep_dropoff_datetime))) as Drop_Off_Month, count(*) as Number_Of_Records from nyctaxidata_table group by year(from_unixtime(unix_timestamp(tpep_dropoff_datetime))), month(from_unixtime(unix_timestamp(tpep_dropoff_datetime))) order by Dropoff_Year, Dropoff_Month;
--There are 117 records in which dropoff datetime is other than November and December of 2017.

--Write a query to check where is there any record in which pickup datetime is after dropoff datetime.
select count(*) as Wrong_DateTime FROM nyctaxidata_table where unix_timestamp(tpep_pickup_datetime) > unix_timestamp(tpep_dropoff_datetime);
-- There are 73 records in which pickup datetime is after dropoff datetime.

-----------------------------
--Check Passenger count column
-----------------------------
--Write a query to check different number of passengers
select passenger_count as Number_Of_Passengers, count(*) as Number_Of_Records from nyctaxidata_table group by passenger_count order by passenger_count;
--Number_Of_Passengers ---> Number_Of_Records
--0 ---> 6824
--1 ---> 827499
--2 ---> 176872
--3 ---> 50693
--4 ---> 24951
--5 ---> 54568
--6 ---> 33146
--7 ---> 12
--8 ---> 3
--9 ---> 1
--Records with passengers as 0,7,8,9 are inconsistent/wrong as the Taxis are not allowed to take more than 6 passengers(including child on lap of adult passenger).

-----------------------------
--Check trip distance column
-----------------------------
--Write a query to check number of records with disance as 0 or negative number.
select count(*) from nyctaxidata_table where trip_distance <= 0;
--7402 records have trip distance as 0 or less than 0. 

-----------------------------
--Check Rate Code Id
-----------------------------
--Write a query to check different rate code ids
select rate_code_id as rate_code_ids, count(*) as Number_Of_Records from nyctaxidata_table group by rate_code_id order by rate_code_id;
--Result is showing 7 different rate code ids. 
--99 Rate code is extra with 9 reocrds.

-----------------------------
--Check Store and forward flag column
-----------------------------
--Write a query to check different store and forward flag values
select store_and_fwd_flag as Store_And_Forward_Flag_Values, count(*) as Number_Of_Records from nyctaxidata_table group by store_and_fwd_flag;
--Result is showing 2 different flag values(Y,N).

-----------------------------
--Check Payment Type column
-----------------------------
--Write a query to check different payment types
select payment_type as Type_Of_Payments, count(*) as Number_Of_Records from nyctaxidata_table group by payment_type order by payment_type;
--Type_Of_Payments | Number_Of_Records
--     1           |      790256
--     2           |      376374
--     3           |      6274
--     4           |      1665
--Result is showing no extra payment type

-----------------------------
--Check Fare Amount
-----------------------------
--Write a query to check number of records with fare amount as 0 or negative number.
select count(*) from nyctaxidata_table where fare_amount <0;
--558 records have fare_amount as less than 0.

-----------------------------
--Check Column Extra
-----------------------------
--Write a query to check different values in column Extra.
select extra as extra, count(*) as Number_Of_Records from nyctaxidata_table group by extra order by extra;
--Result is showing 44 different values where as only 3 values are valid $0, $0.5 and $1. 

-----------------------------
--Check MTA Tax
-----------------------------
--Write a query to check different values in column mta_tax.
select mta_tax as MTA_TAX, count(*) as Number_Of_Records from nyctaxidata_table group by mta_tax order by mta_tax;
--Result is showing 5 different values where as only 2 values are valid $0, $0.5.

-----------------------------
--Check Improvement surcharge
-----------------------------
--Write a query to check different values in column improvement_surcharge.
select improvement_surcharge as Improvement_Surcharge, count(*) as Number_Of_Records from nyctaxidata_table group by improvement_surcharge order by improvement_surcharge;
--Result is showing 4 different values where as only 2 values are valid $0, $0.3.

-----------------------------
--Check Tip Amount
-----------------------------
--Write a query to check number of records with tip_amount as negative number.
select count(*) from nyctaxidata_table where tip_amount < 0;
--4 records have tip_amount as less than 0.

--Write a query to check if non-zero tip amount has been registed for cash payments.
select tip_amount as Tip_Amount, count(*) as Number_Of_Records from nyctaxidata_table where payment_type=2 and tip_amount!= 0 group by tip_amount;
--No record found

-----------------------------
--Check Tolls Amount
-----------------------------
--Write a query to check number of records with tolls_amount as negative number.
select count(*) from nyctaxidata_table where tolls_amount < 0;
--3 records have tolls_amount as less than 0.

-----------------------------
--Check Total Amount
-----------------------------
--Write a query to check number of records with total_amount as 0 or negative number.
select count(*) from nyctaxidata_table where total_amount <0;
--558 records have total_amount as less than 0.


-----------------------------
-----------------------------
--Question 3-->
-----------------------------
-----------------------------

--You might have encountered unusual or erroneous rows in the dataset. Can you conclude which vendor is doing a bad job in providing the records using different columns of the dataset? Summarise your conclusions based on every column where these errors are present. For example,  There are unusual passenger count, i.e. 0 which is unusual.
--Write a query to find out vendor with number of inconsistent/wrong records.
select vendorid as Provider, count(*) as Number_Of_Records from nyctaxidata_table where (year(from_unixtime(unix_timestamp(tpep_pickup_datetime))) !=2017 or month(from_unixtime(unix_timestamp(tpep_pickup_datetime))) not in (11,12) or year(from_unixtime(unix_timestamp(tpep_dropoff_datetime))) !=2017 or month(from_unixtime(unix_timestamp(tpep_dropoff_datetime))) not in (11,12) or unix_timestamp(tpep_pickup_datetime) > unix_timestamp(tpep_dropoff_datetime) or passenger_count not in (1,2,3,4,5,6) or trip_distance <= 0.0 or rate_code_id not in (1,2,3,4,5,6) or payment_type not in (1,2,3,4,5,6) or fare_amount <0 or extra not in (0,0.5,1) or mta_tax not in(0,0.5) or tip_amount < 0.0 or (payment_type=2 and tip_amount!=0) or tolls_amount < 0.0 or improvement_surcharge not in (0,0.3) or total_amount <0) group by vendorid order by vendorid; 
-- Provider | Number_Of_Records | Name
--     1    |       12757		| Creative Moblie Technologies,LLC
--     2    |       6405		| VeriFone Inc.
-- By ablove result it is clear that Creative Moblie Technologies,LLC is doing a bad job in providing the records.


-----------------------------
-----------------------------
--Create new Table for analysis
-----------------------------
-----------------------------

--Add the jar and set Hive Parameters if not already set.

ADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;

SET hive.exec.dynamic.partition = true;
SET hive.exec.dynamic.partition.mode = nonstrict;
SET hive.exec.max.dynamic.partitions = 100000;
SET hive.exec.max.dynamic.partitions.pernode = 100000;
SET hive.execution.engine=mr;

--Creating table taxifare_orc
CREATE EXTERNAL TABLE IF NOT EXISTS taxifare_orc(vendorid int, tpep_pickup_datetime string, tpep_dropoff_datetime string, passenger_count int, trip_distance double,rate_code_id int, store_and_fwd_flag string, pu_location_id int, do_location_id int, payment_type int, fare_amount double, extra double, mta_tax double, tip_amount double, tolls_amount double, improvement_surcharge double, total_amount double) PARTITIONED BY (mnth int, m_day int)
STORED AS orc
TBLPROPERTIES ("orc.compress" = "SNAPPY");

--Inserting consistent data from nyctaxidata_table
INSERT OVERWRITE TABLE taxifare_orc PARTITION(mnth, m_day)
select vendorid, tpep_pickup_datetime, tpep_dropoff_datetime, passenger_count, trip_distance, rate_code_id, store_and_fwd_flag, pu_location_id, do_location_id, payment_type, fare_amount, extra, mta_tax, tip_amount, tolls_amount, improvement_surcharge, total_amount, month(tpep_pickup_datetime)as mnth, day(tpep_pickup_datetime)as m_day from nyctaxidata_table
where year(from_unixtime(unix_timestamp(tpep_pickup_datetime)))=2017 and month(from_unixtime(unix_timestamp(tpep_pickup_datetime))) in (11,12) and year(from_unixtime(unix_timestamp(tpep_dropoff_datetime)))=2017 and month(from_unixtime(unix_timestamp(tpep_dropoff_datetime))) in (11,12) and unix_timestamp(tpep_pickup_datetime) < unix_timestamp(tpep_dropoff_datetime) and passenger_count in(1,2,3,4,5,6) and trip_distance > 0.0 and rate_code_id in(1,2,3,4,5,6) and payment_type in (1,2,3,4) and fare_amount >= 0 and extra in (0,0.5,1) and mta_tax in(0,0.5) and tip_amount>=0.0 and tolls_amount >= 0.0 and improvement_surcharge in (0,0.3) and total_amount >= 0;

--Check the table
select * from taxifare_orc limit 5;

-----------------------------
-----------------------------
--Analysis 1
-----------------------------
-----------------------------

-- 1.Compare the overall average fare per trip for November and December.
select mnth as Month_of_Year, round(avg(total_amount),2)as Average_Fare_Charge from taxifare_orc group by mnth order by mnth;
--Overall average fare for November --> $16.19
--Overall average fare for December --> $15.89
--In November month customer has paid $0.30 extra per trip then in December month.

-----------------------------

-- 2.Explore the ‘number of passengers per trip’ - how many trips are made by each level of ‘Passenger_count’? Do most people travel solo or with other people?
select sum(case when passenger_count = 1 then 1 else 0 end)as Solo_Passengers, sum(case when passenger_count != 1 then 1 else 0 end)as Group_Passengers, round(100*sum(case when passenger_count = 1 then 1 else 0 end)/count(*),2) as Solo_Trips_in_Percentage from taxifare_orc;
--Number of solo passengers                  --> 817075
--Number of Group passengers                 --> 336566
--Percentage of solo trips w.r.t total trips --> 70.83%

-----------------------------

-- 3.Which is the most preferred mode of payment?
select payment_type as Payment_Type, count(*) as Number_Of_Records from taxifare_orc group by payment_type order by Number_Of_Records desc;
--1 ---> 779112
--2 ---> 368673
--3 ---> 4550
--4 ---> 1306
--By above result it is clear that most preferred mode of payment is 1 i.e Credit card.
select sum(case when payment_type = 1 then 1 else 0 end)as Credit_Card,count(*)as Total_Trips, round(100*sum(case when payment_type = 1 then 1 else 0 end)/count(*),2) as Percentage_Of_Credit_Card_Trips from taxifare_orc;
--Total trips                     --> 1153641
--Percentage of credit card trips --> 67.54

-----------------------------

-- 4.What is the average tip paid per trip? Compare the average tip with the 25th, 50th and 75th percentiles and comment whether the ‘average tip’ is a representative statistic (of the central tendency) of ‘tip amount paid’. Hint: You may use percentile_approx(DOUBLE col, p): Returns an approximate pth percentile of a numeric column (including floating point types) in the group.
select round(avg(tip_amount),2) as Average_Tip, round(percentile_approx(tip_amount,0.25),2)as 25th_Percentile_Tip, round(percentile_approx(tip_amount, 0.50),2)as 50th_Percentile_Tip, round(percentile_approx(tip_amount, 0.75),2)as 75th_Percentile_Tip, count(distinct tip_amount)as Distict_Tip_Amounts from taxifare_orc where payment_type != 2;
--We need to ignore trips with cash as mode of payments as tips are not recorded.
--average_tip         --> 2.68
--25th_percentile_tip --> 1.34
--50th_percentile_tip --> 2
--75th_percentile_tip --> 3.05
--distict_tip_amounts --> 2051

-----------------------------

-- 5.Explore the ‘Extra’ (charge) variable - what fraction of total trips have an extra charge is levied? 
select sum(case when extra != 0 then 1 else 0 end)as Trips_With_Extra_Charge, count(*)as Total_Number_Of_Trips, round(sum(case when extra != 0 then 1 else 0 end)/count(*),2) as Fraction_Of_Total_Trips_With_Extra_Charge from taxifare_orc;
--Number of trips with Extra Charge         --> 532262
--Number of total trips                     --> 1153641
--Fraction of Total trips with Extra Charge --> 0.46

-----------------------------
-----------------------------
--Analysis 2
-----------------------------
-----------------------------
-- 1.What is the correlation between the number of passengers on any given trip, and the tip paid per trip? Do multiple travellers tip more compared to solo travellers? Hint: Use CORR(Col_1, Col_2)
select round(corr(passenger_count, tip_amount),2)as Corr_PasngrCont_And_TipAmt, round(avg(case when passenger_count=1 then tip_amount else null end),2) as Solo_Trips_Average_Tip, round(avg(case when passenger_count != 1 then tip_amount else null end),2) as Group_Trips_Average_Tip from taxifare_orc where payment_type != 2;
--Correlation of passenger and tip --> 0.01
--Tip for solo trips               --> 2.66
--Tip for group trips              --> 2.74

-----------------------------

-- 2.Segregate the data into five segments of ‘tip paid’: [0-5), [5-10), [10-15) , [15-20) and >=20. Calculate the percentage share of each bucket (i.e. the fraction of trips falling in each bucket).
select Tip_Bucket, count(*)as Number_Of_Records, max(records_count)as Total_Number_Of_Records, round(count(*)/max(records_count),5)as Tip_Bucket_as_fraction from (select kcol.*, count(*) over () records_count,
    case when tip_amount >= 0 and tip_amount <5 then '0_5_Bucket' 
	when tip_amount >=5 and tip_amount < 10 then '5_10_Bucket'
	when tip_amount >=10 and tip_amount < 15 then '10_15_Bucket'
	when tip_amount >=15 and tip_amount < 20 then '15_20_Bucket'
	else '20above_Bucket' 
	end as Tip_Bucket 
    from taxifare_orc kcol)as sub_tbl
where sub_tbl.payment_type != 2
group by Tip_Bucket
order by Tip_Bucket_as_fraction desc;
--[0-5)  --> 0.60447
--[5-10) --> 0.05637
--[10-15)--> 0.01683
--[15-20)--> 0.00187
--[20-)  --> 0.00089

-----------------------------

-- 3.Which month has a greater average ‘speed’ - November or December? Note that the variable ‘speed’ will have to be derived from other metrics. Hint: You have columns for distance and time.
select round(avg(case when mnth=11 then (trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) else null end),2)as November_Average_Speed_MPH, round(avg(case when mnth=12 then (trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) else null end),2)as December_Average_Speed_MPH, round(round(avg(case when mnth=11 then (trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) else null end),2) - round(avg(case when mnth=12 then (trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) else null end),2),2) as November_minus_December_Avg_Speed_MPH from taxifare_orc;
--Average Speed in November Month --> 10.97
--Average Speed in December Month --> 11.07
--Difference in Spped             --> 00.10
--Speed of trips in December Month is greater than Speed of trips in November Month.

-----------------------------

-- 4.Analyse the average speed of the most happening days of the year, i.e. 31st December (New year’s eve) and 25th December (Christmas) and compare it with the overall average.
select round(avg(case when mnth=12 and m_day=25 then (trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) else null end),3)as ChristmasEve_Average_Speed_MPH, round(avg(case when mnth=12 and m_day=31 then (trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) else null end),3)as NewYearEve_Average_Speed_MPH, round(avg(case when mnth in (11,12) then (trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) else null end),3)as Overall_Average_Speed_MPH, round(round(avg(case when mnth=12 and m_day=25 then (trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) else null end),3) - round(avg(case when mnth in (11,12) then (trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) else null end),3),3) as ChristmasEve_minus_Overall_Avg_Speed_MPH, round(round(avg(case when mnth=12 and m_day=31 then (trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) else null end),3) - round(avg(case when mnth in (11,12) then (trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) else null end),3),3) as NewYearEve_minus_Overall_Avg_Speed_MPH from taxifare_orc;
--Average Speed on Christmas                           --> 15.265
--Average Speed on New year                            --> 13.273
--Overall Average Speed                                --> 11.023
--Difference of Average spped on Christmas and overall --> 4.242
--Difference of Average spped on New Year and overall  --> 2.25